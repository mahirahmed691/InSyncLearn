# Podfile for InSyncLearn iOS project


# Import Expo autolinking script
require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")

# Import React Native Pods autolinking script
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

# Import JSON for Podfile properties
require 'json'

# Parse Podfile properties from Podfile.properties.json
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

# Set environment variables based on Podfile properties
ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

# Set iOS platform and Cocoapods installation options
platform :ios, podfile_properties['ios.deploymentTarget'] || '13.4'
install! 'cocoapods', :deterministic_uuids => false

# Prepare React Native project
prepare_react_native_project!

# Determine Flipper configuration based on environment variables and Podfile properties
flipper_config = FlipperConfiguration.disabled
if ENV['NO_FLIPPER'] == '1'
  flipper_config = FlipperConfiguration.disabled
elsif podfile_properties.key?('ios.flipper')
  flipper_config = FlipperConfiguration.enabled(["Debug", "Release"], { 'Flipper' => podfile_properties['ios.flipper'] }) if podfile_properties['ios.flipper'] != 'false'
end

# Define main target for InSyncLearn project
target 'InSyncLearn' do
  # Use Expo modules
  use_expo_modules!

  # Use native modules
  config = use_native_modules!

  # Add Firebase/Core pod
  pod 'Firebase/Core'

  # Use frameworks if specified in Podfile properties
  use_frameworks! :linkage => podfile_properties['ios.useFrameworks'].to_sym if podfile_properties['ios.useFrameworks']

  # Use React Native with specified configurations
  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :flipper_configuration => flipper_config
  )

  # Perform post-installation tasks
  post_install do |installer|
    # Call React Native post-installation script
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )

    # Disable code signing for resource bundles (necessary for Xcode 14)
    installer.target_installation_results.pod_target_installation_results.each do |pod_name, target_installation_result|
      target_installation_result.resource_bundle_targets.each do |resource_bundle_target|
        resource_bundle_target.build_configurations.each do |config|
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end
  end

  # Perform post-integration tasks
  post_integrate do |installer|
    begin
      # Patch React imports for Expo modules
      expo_patch_react_imports!(installer)
    rescue => e
      Pod::UI.warn e
    end
  end
end
